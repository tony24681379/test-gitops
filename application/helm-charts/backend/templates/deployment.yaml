{{- range $version, $values := .Values.versions }}
{{- range $values.apps }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ $.Values.name }}-{{ $version }}-{{ .name }}"
  annotations:
    reloader.stakater.com/auto: "true"
spec:
  replicas: {{ .replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/type: {{ $.Values.type }}
      app.kubernetes.io/name: "{{ $.Values.name }}-{{ $version }}-{{ .name }}"
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app.kubernetes.io/type: {{ $.Values.type }}
        app.kubernetes.io/name: "{{ $.Values.name }}-{{ $version }}-{{ .name }}"
        {{- if $.Values.jsonLog }}
        vector.dev/json: "true"
        {{- end }}
        {{- if $.Values.dropLog }}
        vector.dev/exclude: "true"
        {{- end }}
        {{- with .podLabels }}
        {{ toYaml . | nindent 6 }}
        {{- end }}
      annotations:
        traffic.sidecar.istio.io/excludeOutboundPorts: "5432,6379"
    spec:
      {{- if $.Values.serviceAccount.enabled }}
      serviceAccount: {{ $.Values.name }}
      serviceAccountName: {{ $.Values.name }}
      {{- end }}
      {{- if or $values.nodeSelector .capacityType }}
      nodeSelector:
        {{- if $values.nodeSelector }}
        {{- toYaml $values.nodeSelector | nindent 8 }}
        {{- end }}
        {{- if .capacityType }}
        karpenter.sh/capacity-type: "{{ .capacityType }}"
        {{- end }}
      {{- end }}
      {{- with $.Values.tolerations }}
      tolerations:
      {{- toYaml . | nindent 6 }}
      {{- end }}
      {{- if .ipLocalPortRange }}
      securityContext:
        sysctls:
          - name: net.ipv4.ip_local_port_range
            value: 1024 65535
      {{- end }}
      containers:
      - name: {{ .name }}
        image: "{{ $.Values.image }}:{{ $values.imageTag }}"
        imagePullPolicy: IfNotPresent
        {{- if .command }}
        {{- with .command }}
        command:
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- end }}
        {{- if .args }}
        {{- with .args }}
        args:
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- end }}
        ports:
        - name: http
          containerPort: 80
        env:
        {{- with .env }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- if $.Values.postgresql.enabled }}
        - name: DB_HOST
          value: {{ $.Release.Name }}-postgresql
        - name: DB_NAME
          value: {{ $.Values.postgresql.auth.database }}
        - name: DB_USERNAME
          value: {{ $.Values.postgresql.auth.username }}
        - name: DB_PASSWORD
          value: {{ $.Values.postgresql.auth.password }}
        {{ end }}
        {{- if $.Values.redis.enabled -}}
        - name: REDIS_HOST
          value: {{ $.Release.Name }}-redis-master
        {{- end }}
        envFrom:
          - configMapRef:
              name: {{ $.Values.name }}
          - secretRef:
              name: {{ $.Values.name }}
        {{- with .resources }}
        resources:
        {{- toYaml . | nindent 10 }}
        {{- end }}
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 5
          timeoutSeconds: 5
          periodSeconds: 15
          failureThreshold: 5
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 5
          timeoutSeconds: 5
          periodSeconds: 15
          failureThreshold: 5
{{ end }}
{{ end }}
